/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.toystore.form;

//import com.itextpdf.text.Font;
import java.awt.Font;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import com.toystore.model.HoaDonChiTiet;
import com.toystore.dao.HoaDonChiTietDao;
//import javax.swing.text.Element;
//import com.itextpdf.text.*;
//import com.itextpdf.text.Element;
//import com.itextpdf.text.pdf.BaseFont;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.Document;

public class InBill2 extends javax.swing.JDialog {

    public JTable tblModel;
    public JLabel label;
    public JLabel lblMaKH;
    public JLabel lblTenKH;
    public JLabel lblSDT;
    public JLabel lblDiaChi;
    public JLabel lblGiamGia;
    public JLabel lblTongTien;
    public JLabel lblThanhTien;
    public static String maHD;
    public DefaultTableModel model;
    Font font = new Font("Time New RoMan", Font.BOLD, 18);

    public InBill2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblMaNV = new javax.swing.JLabel();
        lblNgayIn = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Số DT: 0899672816");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Địa chỉ:  Trường Thạnh, Cái răng, Cần Thơ.");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Lightning Strike Fashion Clothing Store");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Hóa đơn Mua Hàng");

        lblMaNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblMaNV.setText("Mã NV: ");

        lblNgayIn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblNgayIn.setText("Ngày: ");

        jButton1.setText("IN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNgayIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblNgayIn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 547, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        inHoaDon();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InBill2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InBill2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InBill2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InBill2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InBill2 dialog = new InBill2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblNgayIn;
    // End of variables declaration//GEN-END:variables
    List<HoaDonChiTiet> list = new ArrayList();
    HoaDonChiTietDao dao = new HoaDonChiTietDao(){
    };

    public void setForm() {
        list = dao.getAllByID(maHD);
        for (HoaDonChiTiet itemp : list) {
            Font font = new Font("Time New RoMan", Font.PLAIN, 18);
//            setLabel(lblTenKH, "Tên KH: " + itemp.get(), font, 35, 150, 200, 20);
//            setLabel(lblMaKH, "Mã KH: " + itemp.getMa(), font, 865, 150, 200, 20);
//            setLabel(lblDiaChi, "Địa chỉ : " + itemp.getDiaChi(), font, 35, 180, 200, 20);
//            setLabel(lblSDT, "SDT    : " + itemp.getsDT(), font, 865, 180, 200, 20);
//            lblMaNV.setText("TênNV : " + itemp.getTenNV());
        }
        Date dateNow = new Date();
        SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
        String text = formater.format(dateNow);
        lblNgayIn.setText("   Ngày : " + text);
    }

    public void setLabel(JLabel lbl, String text, Font font, int x, int y, int width, int height) {
        lbl = new JLabel();
        lbl.setText(text);
        lbl.setFont(font);
        lbl.setBounds(x, y, width, height);
        this.add(lbl);
    }

    public void loadToTable(String ma) {
        maHD = ma;
        setForm();
        Vector<Vector<Object>> data = new Vector<>();
        list = dao.getAllByID(ma);
        int stt = 0;
        double tongTien = 0;
        float giamGia = 0;
        double thanhTien;
        System.out.println("mã hd " + maHD);
        for (HoaDonChiTiet itemp : list) {
            stt++;
            Vector<Object> row = new Vector<>();
            row.add(stt);
            row.add(itemp.getMaHDn());
            row.add(itemp.getMaHDCT());
//            row.add(itemp.getMaGG());
            row.add(itemp.getGhiChu());
            row.add(itemp.getSoLuong());
            row.add(itemp.getMaGG()+ "%");
            row.add(itemp.getThanhTien());
//            row.add((itemp.getGia() * itemp.getSoLuong()) - ((itemp.getGiamGia() / 100) * itemp.getGia()));
//            row.add(itemp.getHinhThucTT());
            data.add(row);
//            tongTien += (itemp.getGia() * itemp.getSoLuong()) - ((itemp.getGiamGia() / 100) * itemp.getGia());
        }
        
        Vector<String> columnNames = new Vector<>();
        columnNames.add("Số TT");
        columnNames.add("Mã SP");
        columnNames.add("Tên SP");
        columnNames.add("Màu");
        columnNames.add("Size");
        columnNames.add("Giá");
        columnNames.add("Số Lượng");
        columnNames.add("Giảm Giá");
        columnNames.add("Thành Tiền");
        columnNames.add("Hình Thức Thanh Toán");
        
        model = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblModel = new JTable(model);
        tblModel.getColumnModel().getColumn(0).setPreferredWidth(5);
        JScrollPane scp = new JScrollPane(tblModel);
        int index = tblModel.getRowHeight();
        int height = ((tblModel.getRowCount()) * index) + 28;
        if (height > 268) {
            height = 268;
        }
        scp.setBounds(30, 200, 1000, height);
        this.add(scp);
        pack();
        setLocationRelativeTo(null);
        if (tongTien > 1000000) {
            giamGia = 100000;
        } else if (tongTien > 2000000) {
            giamGia = 200000;
        } else if (tongTien < 5000000) {
            giamGia = 500000;
        }
        thanhTien = tongTien - giamGia;
        setLabel(lblTongTien, "Tổng Tiền: " + tongTien + "đ", font, 780, ((tblModel.getRowCount()) * index) + 190, 500, 100);
        setLabel(lblGiamGia, "Giảm giá: " + giamGia + "đ", font, 795, ((tblModel.getRowCount()) * index) + 220, 500, 100);
        setLabel(lblGiamGia, "Thành Tiền: " + thanhTien + "đ", font, 770, ((tblModel.getRowCount()) * index) + 250, 500, 100);
    }

//    public void inHoaDon() {
//        list = dao.getAllByID(maHD);
//        try {
//            Document dcmt = new Document() {};
//            PdfWriter writer = PdfWriter.getInstance(dcmt, new FileOutputStream("hoadon.pdf"));
//            dcmt.open();
//            PdfPTable columnNames = new PdfPTable(10);
//            columnNames.addCell(setText("STT"));
//            columnNames.addCell(setText("Mã SP"));
//            columnNames.addCell(setText("Tên SP"));
//            columnNames.addCell(setText("Màu"));
//            columnNames.addCell(setText("Size"));
//            columnNames.addCell(setText("Giá"));
//            columnNames.addCell(setText("SL"));
//            columnNames.addCell(setText("Giam Gia"));
//            columnNames.addCell(setText("Thanh Tien"));
//            columnNames.addCell(setText("HTTT"));
//            columnNames.setWidths(new float[]{2, 8, 20, 8, 5, 10, 2, 5, 15, 25});
////
//            columnNames.setTotalWidth(dcmt.getPageSize().getWidth() - 40);
//            columnNames.setLockedWidth(true);
//            int stt = 0;
//            for (HoaDonChiTiet itemp : list) {
//                stt++;
//                columnNames.addCell(setText(String.valueOf(stt)));
//                columnNames.addCell(setText(itemp.getMaSP()));
//                columnNames.addCell(setText(itemp.getTenSP()));
//                columnNames.addCell(setText(itemp.getMau()));
//                columnNames.addCell(setText(itemp.getSize()));
//                columnNames.addCell(setText(String.valueOf(itemp.getGia())));
//                columnNames.addCell(setText(String.valueOf(itemp.getSoLuong())));
//                columnNames.addCell(setText(itemp.getGiamGia() + "%"));
//                columnNames.addCell(setText(String.valueOf((itemp.getGia() * itemp.getSoLuong()) - ((itemp.getGiamGia() / 100) * itemp.getGia()))));
//                columnNames.addCell(setText(itemp.getHinhThucTT()));
//            }
//            com.itextpdf.text.Font font = FontFactory.getFont(FontFactory.TIMES_ROMAN, 24);
//            font.setStyle(Font.BOLD);
////            Phrase phrase = new Phrase("Black And White Fashion Shop", font);
//            Paragraph paragraph = new Paragraph("Black And White Fashion Shop", font);
//
//// Đặt vị trí của đoạn text
//            paragraph.setSpacingAfter(20); // Khoảng cách dòng giữa các đoạn text
//            paragraph.setIndentationLeft(50);
//            dcmt.add(paragraph);// Thụt vào bên trái
////            dcmt.add(phrase);
//            dcmt.add(columnNames);
//            dcmt.close();
//        } catch (Exception e) {
//        }
//    }
//    public PdfPCell setText(String text) {
//        PdfPCell cell = new PdfPCell(new Phrase(text));
//        cell.getPhrase().getFont().setSize(10);
//        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
//        return cell;
//    }
    
    
    
    
    

//    public Paragraph setFont(String text, int size, int spac, int inden) throws DocumentException, IOException {
//                 BaseFont baseFont;
//
//            baseFont = BaseFont.createFont("path/to/vietnamese/font.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
//
//
//            // Tạo một đối tượng Font với font chữ tiếng Việt
//
////        com.itextpdf.text.Font font = FontFactory.getFont(baseFont,24);
//        Paragraph paragraph = new Paragraph(text);
//        paragraph.setSpacingAfter(spac); // Khoảng cách dòng giữa các đoạn text
//        paragraph.setIndentationLeft(inden);
//        
//    }

}
